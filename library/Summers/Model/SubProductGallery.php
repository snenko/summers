<?php

/**
 * Summers_Model_SubProductGallery
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Summers_Model_SubProductGallery extends Summers_Model_BaseSubProductGallery
{
    public function setUp()
    {
        $this->hasOne(
            'Summers_Model_Gallery', array(
                                         'local'   => 'galleryid',
                                         'foreign' => 'galleryid'
                                    )
        );
        $this->hasOne(
            'Summers_Model_Product', array(
                                         'local'   => 'productid',
                                         'foreign' => 'productid'
                                    )
        );
    }

    // --- static --------------------------------------------
    /**
     * Отримати массив galleries зі всіма значеннями
     * @param $productid
     *
     * @return array
     */
    public static function getGalleries_toArray($productid)
    {
        $q = Doctrine_Query::create()
            ->select('s.galleryid')
            ->from('Summers_Model_SubProductGallery s')
            ->where('s.productid = ?', $productid)
            ->groupBy('s.galleryid');

        $res = $q->fetchArray();

        $res1 = array();

        //залишаємо лише galleryid записи
        //оскільки незнаю як в цій доктринівській скотині вибирати лише один стовбчик
        foreach ($res as $key => $value) {
            $res1[] = $value['galleryid'];
        }

        return $res1;
    }

    /**
     * Отримати массив galleryid
     *
     * @deprecated 1.1
     *
     * @param $productid
     *
     * @return array
     */
    public static function getGalleries($productid)
    {
        $q = Doctrine_Query::create()
            ->select('s.galleryid')
            ->from('Summers_Model_SubProductGallery s')
            ->where('s.productid = ?', $productid)
            ->groupBy('s.galleryid');

        $res = $q->fetchArray();

        $res1 = array();

        //залишаємо лише galleryid записи
        //оскільки незнаю як в цій доктринівській скотині вибирати лише один стовбчик
        if (count($res) > 0) {
            foreach ($res as $key => $value) {
                $res1[] = $value['galleryid'];
            }
        }

        return $res1;
    }

    /**
     * Удаляємо задані звязки між галереєю та товаром
     * @param array $galleries
     *
     * @return bool
     */
    public static function deleteGalleries($galleries)
    {
        if (!$galleries) {
            return false;
        }

//        $galleries_string = implode(",", $galleries);
//        $galleries_string = "({$galleries_string})";
//        $q = Doctrine_Query::create()
//            ->delete('Summers_Model_SubProductGallery s')
//            ->where('s.galleryid IN ?', $galleries_string);

        try
        {
            foreach($galleries as $key=>$value){
                $q = Doctrine_Query::create()
                    ->delete('Summers_Model_SubProductGallery s')
                    ->where('s.galleryid = ?', $value);
                $q->execute();
            }
            return true;
        } catch (Exception $e) {
            return false;
        }
    }

    /**
     * Видаляємо записи звязку галерея-продукт
     * @param $productid
     *
     * @return bool
     */
    public static function deleteGalleries_By_ProductId($productid)
    {
        if (!$productid) {
            return false;
        }

        $q = Doctrine_Query::create()
            ->delete('Summers_Model_SubProductGallery s')
            ->where('s.productid = ?', $productid);

        try
        {
            $q->execute();

            return true;
        } catch (Exception $e) {
            return false;
        }
    }

    /**
     * @param $productid
     * @param $galleries
     *
     * @return bool
     */
    public static function addGalleries($productid, $galleries)
    {
        if (!$galleries) {
            return false;
        }


        foreach ($galleries as $galleryid) {
            $values = array(
                'galleryid' => $galleryid,
                'productid' => $productid,);

            $item = new Summers_Model_SubProductGallery;
            $item->fromArray($values);
            $item->save();
        }
        return true;
    }

    /**
     * @param       $productid
     * @param array $galleries
     *
     * @return bool
     */
    public static function setGalleries($productid, $galleries)
    {
        $galleriesProduct = new Summers_Model_GalleriesProduct($productid, $galleries);

        $galleriesProduct->deleteGalleries();
        $galleriesProduct->addGalleries();

        if ($galleriesProduct->isError) {
            return false;
        }
        return true;
    }

    /**
     * добавити перелік галерей
     * @param $productid
     * @param $galleries
     *
     * @return array
     */
    public static function getGalleriesFromProduct($productid, $all_galleries)
    {
        $galleries = array();
        $prod_gall_ids = Summers_Model_SubProductGallery::getGalleries($productid);
        if ($prod_gall_ids) {
            foreach ($prod_gall_ids as $prod_gall_id) {
                if(array_key_exists($prod_gall_id, $all_galleries)) {
                    $galleries[$prod_gall_id] = $all_galleries[$prod_gall_id];
                }
            }
        }
        return $galleries;
    }
}